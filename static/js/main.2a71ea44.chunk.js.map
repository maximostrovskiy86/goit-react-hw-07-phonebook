{"version":3,"sources":["components/contacts/Contacts.module.css","components/section/Section.module.css","components/filter/Filter.module.css","components/App.module.css","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","components/dataInput/DataInput.js","components/contacts/contactItem/ContactItem.js","components/contacts/Contacts.js","components/section/Section.js","components/filter/Filter.js","components/container/Container.js","components/App.js","index.js","components/dataInput/DataInput.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","items","createReducer","actions","state","payload","some","item","name","toLowerCase","alert","filter","contact","id","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","connect","dispatch","addUser","user","contactsActions","useState","setName","number","setNumber","onHandleChange","e","target","value","className","style","form","onSubmit","preventDefault","shortid","generate","type","pattern","title","required","onChange","btn","ContactItem","onRemoveUser","s","button","onClick","filterInputHandler","allContacts","includes","removeUser","length","map","Section","children","section","toUpperCase","setFilter","label","input","Container","App","app","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2a71ea44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__2Gmj9\",\"button\":\"Contacts_button__3zKln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2aN0g\",\"title\":\"Section_title__2oIwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3K0YO\",\"label\":\"Filter_label__23XmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\"};","import {createAction} from '@reduxjs/toolkit';\n\nconst addContact = createAction('contact/add');\n\nconst deleteContact = createAction('contact/delete');\n\nconst changeFilter = createAction('contact/changeFilter');\n\nexport default {addContact, deleteContact, changeFilter};","import {combineReducers} from 'redux';\nimport {createReducer} from '@reduxjs/toolkit';\nimport actions from './phonebook-actions';\n\nconst items = createReducer([], {\n    [actions.addContact]: (state, {payload}) => {\n        const isFind = state.some(item => item.name.toLowerCase() === payload.name.toLowerCase());\n\n        const isContactExist = () => {\n            alert(`${payload.name} is already in contacts.`);\n            return [...state];\n        }\n\n        return isFind ? isContactExist() : [...state, payload];\n    },\n    [actions.deleteContact]: (state, {payload}) => state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, {payload}) => payload,\n});\n\nexport default combineReducers({\n    items,\n    filter,\n});","import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from \"./phonebook-reducer\";\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n];\n\nconst contactsPersistConfig = {\n    key: 'contacts',\n    storage,\n    blacklist: ['filter'],\n};\n\nconst store = configureStore({\n    reducer: {\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default {store, persistor};\n","import React, {useState} from \"react\";\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport style from \"./DataInput.module.css\";\nimport shortid from 'shortid';\nimport contactsActions from \"../../redux/phonebook-actions\";\n\nconst DataInput = ({addUser}) => {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const onHandleChange = e => {\n        const {value, name} = e.target;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const onHandleSubmit = (e) => {\n        e.preventDefault();\n\n        addUser({\n            name: name,\n            number: number,\n            id: shortid.generate(),\n        });\n\n        setName('');\n        setNumber('');\n    }\n\n    return (\n        <form className={style.form} onSubmit={onHandleSubmit}>\n            <label>\n                Name:\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={style.name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={onHandleChange}\n                    value={name}\n                />\n            </label>\n            <label>\n                Number:\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    className={style.number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    onChange={onHandleChange}\n                    value={number}\n                />\n            </label>\n            <button type=\"submit\" className={style.btn}>Add contact</button>\n        </form>\n    )\n}\n\nDataInput.propTypes = {\n    addUser: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addUser: (user) => dispatch(contactsActions.addContact(user)),\n});\n\nexport default connect(null, mapDispatchToProps)(DataInput);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport s from \"../Contacts.module.css\";\n\nconst ContactItem = ({name, id, number, onRemoveUser}) => {\n\n    const remove = () => onRemoveUser(id);\n\n    return (\n        <li className={s.item}><span>{name}: </span>{number}\n            <button type=\"button\" className={s.button} onClick={remove}>Delete</button>\n        </li>\n    )\n}\n\nContactItem.propTypes = {\n    user: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }),\n}\n\nexport default ContactItem;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport ContactItem from \"./contactItem/ContactItem\";\nimport {connect} from \"react-redux\";\nimport contactsActions from \"../../redux/phonebook-actions\";\n\nconst Contacts = ({contacts, removeUser}) => {\n    return (\n        <>\n            {contacts.length > 0 && (\n                <ul>\n                    {contacts.map(({id, name, number}) => (\n                        <ContactItem\n                            key={id}\n                            id={id}\n                            name={name}\n                            number={number}\n                            onRemoveUser={() => removeUser(id)}\n                        />\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n}\n\nContacts.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n    })),\n    removeUser: PropTypes.func.isRequired,\n}\n\nconst filterInputHandler = (allContacts, filter) => allContacts.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase()));\n\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\n    contacts: filterInputHandler(items, filter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    removeUser: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import React from \"react\";\nimport style from \"./Section.module.css\";\nimport PropTypes from 'prop-types';\n\nconst Section = ({children, title}) => {\n    return (\n        <div className={style.section}>\n            <h2 className={style.title}>{title.toUpperCase()}</h2>\n            {children}\n        </div>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default Section;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport contactsActions from \"../../redux/phonebook-actions\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({filter, setFilter}) => {\n    return (\n        <>\n            <label className={style.label}>\n                Find contacts by name:\n                <input\n                    type=\"text\"\n                    name=\"filter\"\n                    className={style.input}\n                    onChange={setFilter}\n                    value={filter}\n                />\n            </label>\n        </>\n    );\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    setFilter: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setFilter: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\n})\n\nconst mapStateToProps = state => ({\n    value: state.contacts.filter\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport style from \"./Container.scss\";\n\nconst Container = ({children}) => {\n    return (\n        <div className={style.Container}>\n            {children}\n        </div>\n    );\n}\n\nexport default Container;\n","import React from \"react\";\nimport style from \"./App.module.css\";\nimport DataInput from \"./dataInput/DataInput\";\nimport Contacts from \"./contacts/Contacts\";\nimport Section from \"./section/Section\";\nimport Filter from \"./filter/Filter\";\nimport Container from \"./container/Container\";\n\nconst App = () => {\n    return (\n        <div className={style.app}>\n            <Container>\n                <Section title=\"Phonebook\">\n                    <DataInput/>\n                </Section>\n                <Section title=\"Contacts\">\n                    <Filter/>\n                    <Contacts/>\n                </Section>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from 'redux-persist/integration/react';\nimport store from \"./redux/store\";\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <App/>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DataInput_form__1El21\",\"number\":\"DataInput_number__2m9S-\",\"name\":\"DataInput_name__2_neu DataInput_number__2m9S-\",\"btn\":\"DataInput_btn__3YWIG\"};"],"sourceRoot":""}